{"remainingRequest":"/Users/Karl/Coding/app/page/attendee/node_modules/vue-mobile-calendar/node_modules/thread-loader/dist/cjs.js!/Users/Karl/Coding/app/page/attendee/node_modules/vue-mobile-calendar/node_modules/babel-loader/lib/index.js!/Users/Karl/Coding/app/page/attendee/node_modules/vue-mobile-calendar/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/Karl/Coding/app/page/attendee/node_modules/vue-mobile-calendar/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/Karl/Coding/app/page/attendee/node_modules/vue-mobile-calendar/lib/inlineCalendar.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/Karl/Coding/app/page/attendee/node_modules/vue-mobile-calendar/lib/inlineCalendar.vue","mtime":1562758090459},{"path":"/Users/Karl/Coding/app/page/attendee/node_modules/vue-mobile-calendar/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Karl/Coding/app/page/attendee/node_modules/vue-mobile-calendar/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Karl/Coding/app/page/attendee/node_modules/vue-mobile-calendar/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/Karl/Coding/app/page/attendee/node_modules/vue-mobile-calendar/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Karl/Coding/app/page/attendee/node_modules/vue-mobile-calendar/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport \"./inlineCalendar.less\";\nimport dayjs from 'dayjs';\nvar touchStartPosition;\nvar touchEndPosition;\nvar timeStamp;\nexport default {\n  name: 'inlineCalendar',\n  props: {\n    defaultDate: {\n      type: [Date, Number, Array, String, dayjs]\n    },\n    disabledDate: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    minDate: {\n      type: [Date, Number, Array, String, dayjs]\n    },\n    maxDate: {\n      type: [Date, Number, Array, String, dayjs]\n    },\n    mode: {\n      type: String,\n      default: 'single'\n    },\n    dayClick: {\n      type: Function,\n      default: function _default() {\n        return function () {\n          return true;\n        };\n      }\n    },\n    enableTouch: {\n      type: Boolean,\n      default: true\n    },\n    monthNames: {\n      type: Array,\n      default: function _default() {\n        return ['一月', '二月', '三月', '四月', '五月', '六月', '七月', '八月', '九月', '十月', '十一月', '十二月'];\n      }\n    },\n    weekNames: {\n      type: Array,\n      default: function _default() {\n        return ['周一', '周二', '周三', '周四', '周五', '周六', '周日'];\n      }\n    },\n    yearUnit: {\n      type: String,\n      default: '年'\n    },\n    btnClose: {\n      type: String,\n      default: '关闭'\n    },\n    btnToday: {\n      type: String,\n      default: '今天'\n    },\n    btnConfirm: {\n      type: String,\n      default: '确 认'\n    }\n  },\n  watch: {\n    mode: function mode() {\n      this.init();\n    },\n    selectDate: function selectDate(newValue) {\n      if (newValue.length > 1) {\n        this.isDisabled = false;\n      } else {\n        this.isDisabled = true;\n      }\n    }\n  },\n  data: function data() {\n    return {\n      fullDate: [[], [], []],\n      translateX: 0,\n      showDate: {\n        year: undefined,\n        month: undefined\n      },\n      dateNow: {\n        year: dayjs().year(),\n        month: dayjs().month() + 1,\n        date: dayjs().date()\n      },\n      selectDate: [],\n      touch: {\n        x: 0,\n        y: 0\n      },\n      isTouching: false,\n      isDisabled: true\n    };\n  },\n  created: function created() {\n    this.init();\n  },\n  methods: {\n    init: function init() {\n      this.selectDate = [];\n      var defaultDate = this.defaultDate,\n          mode = this.mode;\n      var dateToShow = dayjs().startOf('month');\n\n      if (mode === 'single' && defaultDate) {\n        this.selectDate = dayjs(defaultDate).startOf('day');\n        dateToShow = this.selectDate.startOf('month');\n      }\n\n      if (mode === 'multiple' && Array.isArray(defaultDate)) {\n        if (defaultDate.length > 0) {\n          this.selectDate = defaultDate.map(function (item) {\n            return dayjs(item).startOf('day');\n          });\n        }\n      }\n\n      if (mode === 'during' && Array.isArray(defaultDate)) {\n        if (defaultDate.length === 2) {\n          var startDate = dayjs(defaultDate[0]).startOf('day');\n          var endDate = dayjs(defaultDate[1]).startOf('day');\n\n          if (startDate.isBefore(endDate) || startDate.isSame(endDate)) {\n            this.selectDate = [startDate, endDate];\n          }\n        }\n      }\n\n      this.showDate = {\n        year: dateToShow.year(),\n        month: dateToShow.month() + 1\n      };\n      this.getFullDate(this.showDate);\n    },\n    touchstart: function touchstart(event) {\n      if (this.enableTouch) {\n        touchStartPosition = event.touches[0].clientX;\n        touchEndPosition = event.touches[0].clientY;\n        timeStamp = event.timeStamp;\n        this.touch = {\n          x: 0,\n          y: 0\n        };\n        this.isTouching = true;\n      }\n    },\n    touchmove: function touchmove(event) {\n      if (this.enableTouch) {\n        this.touch = {\n          x: (event.touches[0].clientX - touchStartPosition) / this.$refs.calendar.offsetWidth,\n          y: (event.touches[0].clientY - touchEndPosition) / this.$refs.calendar.offsetHeight\n        };\n      }\n    },\n    touchend: function touchend(event) {\n      if (this.enableTouch) {\n        this.isTouching = false;\n        var during = dayjs(event.timeStamp).diff(timeStamp);\n\n        if (Math.abs(this.touch.x) > Math.abs(this.touch.y) && Math.abs(this.touch.x * this.$refs.calendar.offsetWidth) > 20) {\n          if (this.touch.x > 0) {\n            this.changeMonth('prev');\n          } else if (this.touch.x < 0) {\n            this.changeMonth('next');\n          }\n        } else {\n          this.touch = {\n            x: 0,\n            y: 0\n          };\n        }\n      }\n    },\n    // 触发change事件\n    emitChange: function emitChange() {\n      this.$emit('change', this.selectDate);\n    },\n    // 触发切换年月事件\n    emitSwitch: function emitSwitch(showDate) {\n      this.$emit('switch', showDate);\n    },\n    // 日期点击事件\n    onDayClick: function onDayClick(day) {\n      if (!this.dayClick(day.dateTime)) {\n        return;\n      }\n\n      switch (this.$props.mode) {\n        case 'single':\n          if (!day.isSelect && !day.isDisable) {\n            this.selectDate = day.dateTime;\n            this.getFullDate(this.showDate);\n            this.emitChange();\n          }\n\n          break;\n\n        case 'multiple':\n          if (!day.isSelect && !day.isDisable) {\n            this.selectDate.push(day.dateTime);\n            this.getFullDate(this.showDate);\n            this.emitChange();\n          } else {\n            if (this.selectDate.length > 1) {\n              this.selectDate = this.selectDate.filter(function (item) {\n                return !item.isSame(day.dateTime);\n              });\n              this.getFullDate(this.showDate);\n              this.emitChange();\n            }\n          }\n\n          break;\n\n        case 'during':\n          if (day.isDisable) return;\n\n          if (this.selectDate.length === 0) {\n            this.selectDate = [day.dateTime];\n          } else if (this.selectDate.length === 1) {\n            this.selectDate.push(day.dateTime);\n\n            if (this.selectDate[1].isBefore(this.selectDate[0])) {\n              this.selectDate.reverse();\n            }\n          } else if (this.selectDate.length === 2) {\n            this.selectDate = [day.dateTime];\n          }\n\n          this.getFullDate(this.showDate);\n          this.emitChange();\n          break;\n      }\n    },\n    // 切换年份\n    changeYear: function changeYear(action) {\n      var date = dayjs(\"\".concat(this.showDate.year, \"-\").concat(this.showDate.month));\n      var computedDate;\n\n      switch (action) {\n        case 'prev':\n          this.translateX += 1;\n          computedDate = date.subtract(1, 'year');\n          break;\n\n        case 'next':\n          this.translateX -= 1;\n          computedDate = date.add(1, 'year');\n          break;\n      }\n\n      this.showDate = {\n        year: computedDate.year(),\n        month: computedDate.month() + 1\n      };\n      this.emitSwitch(this.showDate);\n      this.getFullDate(this.showDate);\n    },\n    // 切换月份\n    changeMonth: function changeMonth(action) {\n      var date = dayjs(\"\".concat(this.showDate.year, \"-\").concat(this.showDate.month));\n      var computedDate;\n\n      switch (action) {\n        case 'prev':\n          this.translateX += 1;\n          computedDate = date.subtract(1, 'month');\n          break;\n\n        case 'next':\n          this.translateX -= 1;\n          computedDate = date.add(1, 'month');\n          break;\n      }\n\n      this.showDate = {\n        year: computedDate.year(),\n        month: computedDate.month() + 1\n      };\n      this.emitSwitch(this.showDate);\n      this.getFullDate(this.showDate);\n    },\n    // 暴露出去的方法：切换当前显示的时间\n    changeDateView: function changeDateView() {\n      var date = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : dayjs();\n      var changeDate = dayjs(date);\n      this.showDate = {\n        year: changeDate.year(),\n        month: changeDate.month() + 1\n      };\n      this.getFullDate(this.showDate);\n    },\n    getFullDate: function getFullDate() {\n      var date = dayjs(\"\".concat(this.showDate.year, \"-\").concat(this.showDate.month));\n      var thisDate = this.getDate(date);\n      var prevDate = this.getDate(date.subtract(1, 'month'));\n      var nextDate = this.getDate(date.add(1, 'month'));\n      this.fullDate = [prevDate.fullDate, thisDate.fullDate, nextDate.fullDate];\n    },\n    // 当前日期是否被选中\n    isSelect: function isSelect(date) {\n      var select = false;\n\n      switch (this.$props.mode) {\n        case 'single':\n          if (this.selectDate && date.isSame(this.selectDate)) {\n            select = true;\n          }\n\n          break;\n\n        case 'multiple':\n          if (this.selectDate.length > 0 && this.selectDate.some(function (item) {\n            return date.isSame(item);\n          })) {\n            select = true;\n          }\n\n          break;\n      }\n\n      return select;\n    },\n    // 当前时间是否在selectDate之间\n    isBetting: function isBetting(date) {\n      if (this.mode === 'during') {\n        var startDate = this.selectDate[0];\n        var endDate = this.selectDate[1];\n\n        if (this.selectDate.length === 1) {\n          return date.isSame(startDate);\n        } else if (this.selectDate.length === 2) {\n          return date.isAfter(startDate) && date.isBefore(endDate) || date.isSame(startDate) || date.isSame(endDate);\n        }\n      }\n\n      return false;\n    },\n    getIsDisable: function getIsDisable(dateTime) {\n      var isDisable = false;\n      var disabledDate = this.disabledDate.map(function (item) {\n        return dayjs(item).startOf('day');\n      });\n\n      if (this.minDate || this.maxDate) {\n        if (this.minDate) {\n          var minDate = dayjs(this.minDate).startOf('day');\n          isDisable = dateTime.isBefore(minDate);\n        }\n\n        if (!isDisable && this.maxDate) {\n          var maxDate = dayjs(this.maxDate).endOf('day');\n          isDisable = dateTime.isAfter(maxDate);\n        }\n      } else if (disabledDate.length > 0) {\n        if (this.mode !== 'during') {\n          isDisable = disabledDate.some(function (item) {\n            return item.isSame(dateTime);\n          });\n        }\n      }\n\n      return isDisable;\n    },\n    getDate: function getDate(thisDate) {\n      var date = [];\n      var prevDate = thisDate.subtract(1, 'month');\n      var nextDate = thisDate.add(1, 'month');\n      var firstDayOfWeek = thisDate.day() || 7;\n      var dayCountOfThisMonth = thisDate.daysInMonth();\n      var dayCountOfPrevMonth = prevDate.daysInMonth();\n      var prevIndexOfThisMonth = firstDayOfWeek - 1;\n      var NextIndexOfThisMonth = firstDayOfWeek + dayCountOfThisMonth - 2;\n      var disabledDate = this.disabledDate.map(function (item) {\n        return dayjs(item).startOf('day');\n      });\n\n      for (var i = 0; i < 7 * 6; i++) {\n        // 上月\n        if (i < prevIndexOfThisMonth) {\n          var value = dayCountOfPrevMonth - (firstDayOfWeek - i - 2);\n          var dateTime = prevDate.date(value);\n          date[i] = {\n            value: value,\n            dateTime: dateTime,\n            isGrey: true,\n            isToday: dateTime.isSame(dayjs().startOf('day')),\n            isSelect: this.isSelect(dateTime),\n            isDisable: this.getIsDisable(dateTime),\n            isDuring: this.isBetting(dateTime)\n          };\n        } // 当月\n\n\n        if (i >= prevIndexOfThisMonth && i <= NextIndexOfThisMonth) {\n          var _value = i - firstDayOfWeek + 2;\n\n          var _dateTime = thisDate.date(_value);\n\n          date[i] = {\n            value: _value,\n            dateTime: _dateTime,\n            isGrey: false,\n            isToday: _dateTime.isSame(dayjs().startOf('day')),\n            isSelect: this.isSelect(_dateTime),\n            isDisable: this.getIsDisable(_dateTime),\n            isDuring: this.isBetting(_dateTime)\n          };\n        } // 下月\n\n\n        if (i > NextIndexOfThisMonth) {\n          var _value2 = i - firstDayOfWeek - dayCountOfThisMonth + 2;\n\n          var _dateTime2 = nextDate.date(_value2);\n\n          date[i] = {\n            value: _value2,\n            dateTime: _dateTime2,\n            isGrey: true,\n            isToday: _dateTime2.isSame(dayjs().startOf('day')),\n            isSelect: this.isSelect(_dateTime2),\n            isDisable: this.getIsDisable(_dateTime2),\n            isDuring: this.isBetting(_dateTime2)\n          };\n        }\n      }\n\n      var fullDate = [];\n\n      for (var _i = 0; _i < 6; _i++) {\n        fullDate.push(date.slice(_i * 7, (_i + 1) * 7));\n      }\n\n      return {\n        fullDate: fullDate\n      };\n    },\n    onConfirm: function onConfirm() {\n      this.$emit('onConfirm', this.selectDate);\n      this.reSetSelected();\n    },\n    onClose: function onClose() {\n      console.log('this.fullDate: ');\n      this.reSetSelected();\n      this.$emit('onClose');\n    },\n\n    /** \r\n     * @desc 恢复未选中状态（数据和样式）\r\n    */\n    reSetSelected: function reSetSelected() {\n      // 关闭时，回复选中状态为未选中（this.fullDate 数组第一级第二个元素是当前页的效果）\n      for (var a in this.fullDate) {\n        for (var i in this.fullDate[a]) {\n          for (var j in this.fullDate[a][i]) {\n            this.$set(this.fullDate[a][i][j], 'isDuring', false);\n          }\n        }\n      }\n\n      this.selectDate = [];\n    }\n  }\n};",{"version":3,"sources":["inlineCalendar.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"m-calendar\" ref=\"calendar\">\r\n    <div class=\"m-go-today\">\r\n      <span @click=\"onClose\">{{btnClose}}</span>\r\n      <div class=\"m-go-today_btn\" @click=\"changeDateView(new Date())\">{{btnToday}}</div>\r\n    </div>\r\n    <div class=\"m-toolbar\">\r\n      <div class=\"m-year-selector\">\r\n        <a class=\"m-prev-btn\" @click=\"changeYear('prev')\"></a>\r\n        <span>{{showDate.year}} {{yearUnit}}</span>\r\n        <a class=\"m-next-btn\" @click=\"changeYear('next')\"></a>\r\n      </div>\r\n      <div class=\"m-month-selector\">\r\n        <a class=\"m-prev-btn\" @click=\"changeMonth('prev')\"></a>\r\n        <span>{{monthNames[showDate.month-1]}}</span>\r\n        <a class=\"m-next-btn\" @click=\"changeMonth('next')\"></a>\r\n      </div>\r\n    </div>\r\n    <div class=\"m-week-header\">\r\n      <div\r\n        class=\"m-week-day\"\r\n        v-for=\"item in weekNames\"\r\n        :key=\"item\"\r\n      >\r\n        {{item}}\r\n      </div>\r\n    </div>\r\n    <div\r\n      class=\"m-months-container\"\r\n      @touchstart=\"touchstart\"\r\n      @touchmove=\"touchmove\"\r\n      @touchend=\"touchend\"\r\n    >\r\n      <div\r\n        class=\"m-months-wrapper\"\r\n        :style=\"{'transform': `translate3d(${-translateX*100}%, 0, 0)`}\"\r\n      >\r\n        <div\r\n          class=\"m-months\"\r\n          v-for=\"(month,monthIndex) in fullDate\"\r\n          :key=\"monthIndex\"\r\n          :style=\"{\r\n            transform: `translate3d(${(monthIndex-1+translateX + (isTouching ? touch.x : 0))*100}%, 0, 0)`,\r\n            transitionDuration: isTouching ? '0s' : '.3s',\r\n          }\"\r\n        >\r\n          <div\r\n            class=\"m-row\"\r\n            v-for=\"(week,weekIndex) in month\"\r\n            :key=\"weekIndex\"\r\n          >\r\n            <div\r\n              class=\"m-day\"\r\n              v-for=\"(day,dayIndex) in week\"\r\n              :key=\"dayIndex\"\r\n              @click=\"onDayClick(day)\"\r\n            >\r\n              <span\r\n                v-if=\"day.isToday\"\r\n                :class=\"{\r\n                  'm-day-num':true,\r\n                  'm-grey': day.isGrey,\r\n                  'm-today': day.isToday,\r\n                  'm-disable': day.isDisable,\r\n                  'm-select': day.isSelect,\r\n                  'm-during': day.isDuring\r\n                }\"\r\n              >\r\n                今天\r\n              </span>\r\n              <span\r\n                v-else\r\n                :class=\"{\r\n                  'm-day-num':true,\r\n                  'm-grey': day.isGrey,\r\n                  'm-today': day.isToday,\r\n                  'm-disable': day.isDisable,\r\n                  'm-select': day.isSelect,\r\n                  'm-during': day.isDuring\r\n                }\"\r\n              >\r\n                {{day.value}}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"m-popover_confirm\">\r\n      <button @click=\"onConfirm\" :disabled=\"isDisabled\">{{btnConfirm}}</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport './inlineCalendar.less';\r\nimport dayjs from 'dayjs';\r\nlet touchStartPosition;\r\nlet touchEndPosition;\r\nlet timeStamp;\r\n\r\nexport default {\r\n  name: 'inlineCalendar',\r\n  props: {\r\n    defaultDate: {\r\n      type: [Date, Number, Array, String, dayjs],\r\n    },\r\n    disabledDate: {\r\n      type: Array,\r\n      default() {\r\n        return [];\r\n      },\r\n    },\r\n    minDate: {\r\n      type: [Date, Number, Array, String, dayjs],\r\n    },\r\n    maxDate: {\r\n      type: [Date, Number, Array, String, dayjs],\r\n    },\r\n    mode: {\r\n      type: String,\r\n      default: 'single',\r\n    },\r\n    dayClick: {\r\n      type: Function,\r\n      default() {\r\n        return function() {\r\n          return true;\r\n        };\r\n      },\r\n    },\r\n    enableTouch: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n    monthNames: {\r\n      type: Array,\r\n      default() {\r\n        return ['一月', '二月', '三月', '四月', '五月', '六月', '七月', '八月', '九月', '十月', '十一月', '十二月'];\r\n      },\r\n    },\r\n    weekNames: {\r\n      type: Array,\r\n      default() {\r\n        return ['周一', '周二', '周三', '周四', '周五', '周六', '周日'];\r\n      },\r\n    },\r\n    yearUnit:{\r\n      type: String,\r\n      default: '年'\r\n    },\r\n    btnClose:{\r\n      type: String,\r\n      default: '关闭'\r\n    },\r\n    btnToday:{\r\n      type: String,\r\n      default: '今天'\r\n    },\r\n    btnConfirm:{\r\n      type: String,\r\n      default: '确 认'\r\n    }\r\n  },\r\n  watch: {\r\n    mode() {\r\n      this.init();\r\n    },\r\n    selectDate(newValue){\r\n      if (newValue.length > 1) {\r\n        this.isDisabled = false\r\n      }\r\n      else {\r\n        this.isDisabled = true\r\n      }\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      fullDate: [[], [], []],\r\n      translateX: 0,\r\n      showDate: {\r\n        year: undefined,\r\n        month: undefined,\r\n      },\r\n      dateNow: {\r\n        year: dayjs().year(),\r\n        month: dayjs().month() + 1,\r\n        date: dayjs().date(),\r\n      },\r\n      selectDate: [],\r\n      touch: {\r\n        x: 0,\r\n        y: 0,\r\n      },\r\n      isTouching: false,\r\n      isDisabled: true\r\n    };\r\n  },\r\n  created() {\r\n    this.init();\r\n  },\r\n  methods: {\r\n    init() {\r\n      this.selectDate = [];\r\n      let { defaultDate, mode } = this;\r\n      let dateToShow = dayjs().startOf('month');\r\n      if (mode === 'single' && defaultDate) {\r\n        this.selectDate = dayjs(defaultDate).startOf('day');\r\n        dateToShow = this.selectDate.startOf('month');\r\n      }\r\n      if (mode === 'multiple' && Array.isArray(defaultDate)) {\r\n        if (defaultDate.length > 0) {\r\n          this.selectDate = defaultDate.map((item) => dayjs(item).startOf('day'));\r\n        }\r\n      }\r\n      if (mode === 'during' && Array.isArray(defaultDate)) {\r\n        if (defaultDate.length === 2) {\r\n          const startDate = dayjs(defaultDate[0]).startOf('day');\r\n          const endDate = dayjs(defaultDate[1]).startOf('day');\r\n          if (startDate.isBefore(endDate) || startDate.isSame(endDate)) {\r\n            this.selectDate = [startDate, endDate];\r\n          }\r\n        }\r\n      }\r\n      this.showDate = {\r\n        year: dateToShow.year(),\r\n        month: dateToShow.month() + 1,\r\n      };\r\n      this.getFullDate(this.showDate);\r\n    },\r\n    touchstart(event) {\r\n      if (this.enableTouch) {\r\n        touchStartPosition = event.touches[0].clientX;\r\n        touchEndPosition = event.touches[0].clientY;\r\n        timeStamp = event.timeStamp;\r\n        this.touch = {\r\n          x: 0,\r\n          y: 0,\r\n        };\r\n        this.isTouching = true;\r\n      }\r\n    },\r\n    touchmove(event) {\r\n      if (this.enableTouch) {\r\n        this.touch = {\r\n          x: (event.touches[0].clientX - touchStartPosition) / this.$refs.calendar.offsetWidth,\r\n          y: (event.touches[0].clientY - touchEndPosition) / this.$refs.calendar.offsetHeight,\r\n        };\r\n      }\r\n    },\r\n    touchend(event) {\r\n      if (this.enableTouch) {\r\n        this.isTouching = false;\r\n        const during = dayjs(event.timeStamp).diff(timeStamp);\r\n        if (Math.abs(this.touch.x) > Math.abs(this.touch.y) && Math.abs(this.touch.x * this.$refs.calendar.offsetWidth) > 20) {\r\n          if (this.touch.x > 0) {\r\n            this.changeMonth('prev');\r\n          } else if (this.touch.x < 0) {\r\n            this.changeMonth('next');\r\n          }\r\n        } else {\r\n          this.touch = {\r\n            x: 0,\r\n            y: 0,\r\n          };\r\n        }\r\n      }\r\n    },\r\n    // 触发change事件\r\n    emitChange() {\r\n      this.$emit('change', this.selectDate);\r\n    },\r\n    // 触发切换年月事件\r\n    emitSwitch(showDate) {\r\n      this.$emit('switch', showDate);\r\n    },\r\n    // 日期点击事件\r\n    onDayClick(day) {\r\n      if (!this.dayClick(day.dateTime)) {\r\n        return;\r\n      }\r\n      switch (this.$props.mode) {\r\n      case 'single':\r\n        if (!day.isSelect && !day.isDisable) {\r\n          this.selectDate = day.dateTime;\r\n          this.getFullDate(this.showDate);\r\n          this.emitChange();\r\n        }\r\n        break;\r\n      case 'multiple':\r\n        if (!day.isSelect && !day.isDisable) {\r\n          this.selectDate.push(day.dateTime);\r\n          this.getFullDate(this.showDate);\r\n          this.emitChange();\r\n        } else {\r\n          if (this.selectDate.length > 1) {\r\n            this.selectDate = this.selectDate.filter((item) => !item.isSame(day.dateTime));\r\n            this.getFullDate(this.showDate);\r\n            this.emitChange();\r\n          }\r\n        }\r\n        break;\r\n      case 'during':\r\n        if (day.isDisable) return;\r\n        if (this.selectDate.length === 0) {\r\n          this.selectDate = [day.dateTime];\r\n        } else if (this.selectDate.length === 1) {\r\n          this.selectDate.push(day.dateTime);\r\n          if (this.selectDate[1].isBefore(this.selectDate[0])) {\r\n            this.selectDate.reverse();\r\n          }\r\n        } else if (this.selectDate.length === 2) {\r\n          this.selectDate = [day.dateTime];\r\n        }\r\n        this.getFullDate(this.showDate);\r\n        this.emitChange();\r\n        break;\r\n      }\r\n    },\r\n    // 切换年份\r\n    changeYear(action) {\r\n      const date = dayjs(`${this.showDate.year}-${this.showDate.month}`);\r\n      let computedDate;\r\n      switch (action) {\r\n      case 'prev':\r\n        this.translateX += 1;\r\n        computedDate = date.subtract(1, 'year');\r\n        break;\r\n      case 'next':\r\n        this.translateX -= 1;\r\n        computedDate = date.add(1, 'year');\r\n        break;\r\n      }\r\n      this.showDate = {\r\n        year: computedDate.year(),\r\n        month: computedDate.month() + 1,\r\n      };\r\n      this.emitSwitch(this.showDate);\r\n      this.getFullDate(this.showDate);\r\n    },\r\n    // 切换月份\r\n    changeMonth(action) {\r\n      const date = dayjs(`${this.showDate.year}-${this.showDate.month}`);\r\n      let computedDate;\r\n      switch (action) {\r\n      case 'prev':\r\n        this.translateX += 1;\r\n        computedDate = date.subtract(1, 'month');\r\n        break;\r\n      case 'next':\r\n        this.translateX -= 1;\r\n        computedDate = date.add(1, 'month');\r\n        break;\r\n      }\r\n      this.showDate = {\r\n        year: computedDate.year(),\r\n        month: computedDate.month() + 1,\r\n      };\r\n      this.emitSwitch(this.showDate);\r\n      this.getFullDate(this.showDate);\r\n    },\r\n    // 暴露出去的方法：切换当前显示的时间\r\n    changeDateView(date = dayjs()) {\r\n      const changeDate = dayjs(date);\r\n      this.showDate = {\r\n        year: changeDate.year(),\r\n        month: changeDate.month() + 1,\r\n      };\r\n      this.getFullDate(this.showDate);\r\n    },\r\n    getFullDate() {\r\n      const date = dayjs(`${this.showDate.year}-${this.showDate.month}`);\r\n      const thisDate = this.getDate(date);\r\n      const prevDate = this.getDate(date.subtract(1, 'month'));\r\n      const nextDate = this.getDate(date.add(1, 'month'));\r\n      this.fullDate = [\r\n        prevDate.fullDate,\r\n        thisDate.fullDate,\r\n        nextDate.fullDate,\r\n      ];\r\n    },\r\n    // 当前日期是否被选中\r\n    isSelect(date) {\r\n      let select = false;\r\n      switch (this.$props.mode) {\r\n      case 'single':\r\n        if (this.selectDate && date.isSame(this.selectDate)) {\r\n          select = true;\r\n        }\r\n        break;\r\n      case 'multiple':\r\n        if (this.selectDate.length > 0 && this.selectDate.some((item) => date.isSame(item))) {\r\n          select = true;\r\n        }\r\n        break;\r\n      }\r\n      return select;\r\n    },\r\n    // 当前时间是否在selectDate之间\r\n    isBetting(date) {\r\n      if (this.mode === 'during') {\r\n        const startDate = this.selectDate[0];\r\n        const endDate = this.selectDate[1];\r\n        if (this.selectDate.length === 1) {\r\n          return date.isSame(startDate);\r\n        } else if (this.selectDate.length === 2) {\r\n          return (date.isAfter(startDate) && date.isBefore(endDate)) || date.isSame(startDate) || date.isSame(endDate);\r\n        }\r\n      }\r\n      return false;\r\n    },\r\n    getIsDisable(dateTime) {\r\n      let isDisable = false;\r\n      const disabledDate = this.disabledDate.map((item) => dayjs(item).startOf('day'));\r\n      if (this.minDate || this.maxDate) {\r\n        if (this.minDate) {\r\n          const minDate = dayjs(this.minDate).startOf('day');\r\n          isDisable = dateTime.isBefore(minDate);\r\n        }\r\n        if (!isDisable && this.maxDate) {\r\n          const maxDate = dayjs(this.maxDate).endOf('day');\r\n          isDisable = dateTime.isAfter(maxDate);\r\n        }\r\n      } else if (disabledDate.length > 0) {\r\n        if (this.mode !== 'during') {\r\n          isDisable = disabledDate.some((item) => item.isSame(dateTime));\r\n        }\r\n      }\r\n      return isDisable;\r\n    },\r\n    getDate(thisDate) {\r\n      let date = [];\r\n      const prevDate = thisDate.subtract(1, 'month');\r\n      const nextDate = thisDate.add(1, 'month');\r\n      const firstDayOfWeek = thisDate.day() || 7;\r\n      const dayCountOfThisMonth = thisDate.daysInMonth();\r\n      const dayCountOfPrevMonth = prevDate.daysInMonth();\r\n      const prevIndexOfThisMonth = firstDayOfWeek - 1;\r\n      const NextIndexOfThisMonth = firstDayOfWeek + dayCountOfThisMonth - 2;\r\n      const disabledDate = this.disabledDate.map((item) => dayjs(item).startOf('day'));\r\n      for (let i = 0; i < 7 * 6; i++) {\r\n        // 上月\r\n        if (i < prevIndexOfThisMonth) {\r\n          const value = dayCountOfPrevMonth - (firstDayOfWeek - i - 2);\r\n          const dateTime = prevDate.date(value);\r\n          date[i] = {\r\n            value,\r\n            dateTime,\r\n            isGrey: true,\r\n            isToday: dateTime.isSame(dayjs().startOf('day')),\r\n            isSelect: this.isSelect(dateTime),\r\n            isDisable: this.getIsDisable(dateTime),\r\n            isDuring: this.isBetting(dateTime),\r\n          };\r\n        }\r\n        // 当月\r\n        if (\r\n          i >= prevIndexOfThisMonth &&\r\n          i <= NextIndexOfThisMonth\r\n        ) {\r\n          const value = i - firstDayOfWeek + 2;\r\n          const dateTime = thisDate.date(value);\r\n          date[i] = {\r\n            value,\r\n            dateTime,\r\n            isGrey: false,\r\n            isToday: dateTime.isSame(dayjs().startOf('day')),\r\n            isSelect: this.isSelect(dateTime),\r\n            isDisable: this.getIsDisable(dateTime),\r\n            isDuring: this.isBetting(dateTime),\r\n          };\r\n        }\r\n        // 下月\r\n        if (i > NextIndexOfThisMonth) {\r\n          const value = i - firstDayOfWeek - dayCountOfThisMonth + 2;\r\n          const dateTime = nextDate.date(value);\r\n          date[i] = {\r\n            value,\r\n            dateTime,\r\n            isGrey: true,\r\n            isToday: dateTime.isSame(dayjs().startOf('day')),\r\n            isSelect: this.isSelect(dateTime),\r\n            isDisable: this.getIsDisable(dateTime),\r\n            isDuring: this.isBetting(dateTime),\r\n          };\r\n        }\r\n      }\r\n      const fullDate = [];\r\n      for (let i = 0; i < 6; i++) {\r\n        fullDate.push(date.slice(i * 7, (i + 1) * 7));\r\n      }\r\n      return {\r\n        fullDate,\r\n      }\r\n    },\r\n    onConfirm(){\r\n      this.$emit('onConfirm', this.selectDate)\r\n      this.reSetSelected()\r\n    },\r\n    onClose(){\r\n      console.log('this.fullDate: ', )\r\n      this.reSetSelected()\r\n      this.$emit('onClose')\r\n    },\r\n    /** \r\n     * @desc 恢复未选中状态（数据和样式）\r\n    */\r\n    reSetSelected(){\r\n      // 关闭时，回复选中状态为未选中（this.fullDate 数组第一级第二个元素是当前页的效果）\r\n      for (let a in this.fullDate) {\r\n        for (let i in this.fullDate[a]) {\r\n          for (let j in this.fullDate[a][i]) {\r\n            this.$set(this.fullDate[a][i][j],'isDuring', false)\r\n          }\r\n        }\r\n      }\r\n\r\n      this.selectDate = []\r\n    }\r\n  },\r\n};\r\n</script>\r\n"],"sourceRoot":"lib"}]}